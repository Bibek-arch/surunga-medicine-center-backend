"""
Django settings for clinic_backend project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vhcq^-+1iy&7q)%z5d*m9c6+iy0lnq2s6!4s#i^fd#7!b6gnuu'

# SECURITY WARNING: don't run with debug turned on in production!

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
ALLOWED_HOSTS = ['*']
DEBUG = True
#DEBUG = True
# ALLOWED_HOSTS = [
#     "surunga-medicine-center-backend.onrender.com",
#     "surungamedicine.com.np",
#     "localhost",
# ]
# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'corsheaders',
    'clinic',
    # 'grappelli',
    # 'cloudinary',  # Add this line
    # 'storages',  # Use 'storages' instead of 'cloudinary_storage'  # Add this (not just 'storages')
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Add this line
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

CORS_ALLOW_ALL_ORIGINS = False

CORS_ALLOWED_ORIGINS = [
    "https://res.cloudinary.com",  # Allow Cloudinary
    "https://surungamedicine.com.np",
    "https://www.surungamedicine.com.np",  # In case you are using "www"
    "http://localhost:3000",
    # "https://res.cloudinary.com"  # Add Cloudinary domain

]
CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_HEADERS = [
#     "content-type",
#     "authorization",
#     "x-requested-with",
#     "accept",
#     "origin",
#     "user-agent",
#     "cache-control",
#     "x-csrf-token",
# ]
ROOT_URLCONF = 'clinic_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'clinic_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',  # Supabase default DB name
#         'USER': 'postgres',
#         'PASSWORD': 'surunga123',
#         'HOST': 'db.wkgquanhuhbrllticpbv.supabase.co',  # Supabase host
#         'PORT': '5432',
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',
#         'USER': 'clinic',
#         'PASSWORD': 'surunga123',
#         'HOST': 'aws-0-ap-southeast-1.pooler.supabase.com',  # Use Transaction Pooler host
#         'PORT': '6543',  # Use Transaction Pooler port
#     }
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',  # Database name (always "postgres" in Supabase)
#         'USER': 'postgres.wkgquanhuhbrllticpbv',  # Extracted from the connection string
#         'PASSWORD': 'surunga123',  # Replace with your actual password
#         'HOST': 'aws-0-ap-southeast-1.pooler.supabase.com',  # Transaction Pooler host
#         'PORT': '6543',  # Transaction Pooler port
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'your_mysql_db',
#         'USER': 'your_mysql_user',
#         'PASSWORD': 'your_mysql_password',
#         'HOST': 'localhost',  # Change if using a remote MySQL server
#         'PORT': '3306',
#         'OPTIONS': {
#             'charset': 'utf8mb4',  # Supports emojis & special characters
#         }
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'surunga_medicine_db',  # तिम्रो MySQL Database नाम
        'USER': 'surunga',  # MySQL Username
        'PASSWORD': 'Surunga@123',  # MySQL Password
        'HOST': 's805.bom1.mysecurecloudhost.com',  # Remote database भए, cPanel मा देखिएको Hostname राख
        'PORT': '3306',  # MySQL को Default Port
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}





# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'dtua6mfji',
#     'API_KEY': '768934758765893',
#     'API_SECRET': '1j8UbbADhWEC0SdDiNh4X7YA2vY',
# }

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# GRAPPELLI_ADMIN_TITLE = "Surunga Medicine Center Admin"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'your_email@gmail.com'
EMAIL_HOST_PASSWORD = 'your_password'


INSTALLED_APPS += ['cloudinary', 'cloudinary_storage']
from decouple import config

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': config('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': config('CLOUDINARY_API_KEY'),
    'API_SECRET': config('CLOUDINARY_API_SECRET'),
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
import cloudinary

cloudinary.config(
    cloud_name = config('CLOUDINARY_CLOUD_NAME'),
    api_key =  config('CLOUDINARY_API_KEY'),
    api_secret = config('CLOUDINARY_API_SECRET'),
)
# print("Cloud Name:",cloudinary.config().cloud_name)
# print("Api Key:",cloudinary.config().api_key)
# print("Api Secret:",cloudinary.config().api_secret)

# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# CLOUDINARY_STORAGE = {
#     "CLOUD_NAME": "dtua6mfji",
#     "API_KEY": "768934758765893",
#     "API_SECRET": "1j8UbbADhWEC0SdDiNh4X7YA2vY"
# }

# DEFAULT_FILE_STORAGE = 'storages.backends.cloudinary.CloudinaryStorage'




# # new updated
# from pathlib import Path
# import os
# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# BASE_DIR = Path(__file__).resolve().parent.parent

# SECRET_KEY = 'django-insecure-vhcq^-+1iy&7q)%z5d*m9c6+iy0lnq2s6!4s#i^fd#7!b6gnuu'

# DEBUG = False
# ALLOWED_HOSTS = [
#     "surunga-medicine-center-backend.onrender.com",
#     "surungamedicine.com.np",
#     "localhost",
# ]

# INSTALLED_APPS = [
#     'rest_framework',
#     'corsheaders',
#     'clinic',
#     'cloudinary',
#     'storages',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]

# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# CORS_ALLOWED_ORIGINS = [
#     "https://surungamedicine.com.np",
#     "https://www.surungamedicine.com.np",
#     "http://localhost:3000",
#     "https://res.cloudinary.com"
# ]
# CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_HEADERS = [
#     "content-type", "authorization", "x-requested-with", "accept", "origin",
#     "user-agent", "cache-control", "x-csrf-token"
# ]

# ROOT_URLCONF = 'clinic_backend.urls'
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR / 'templates'],  # Ensure this path exists
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# AUTH_PASSWORD_VALIDATORS = [
#     {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
# ]

# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
# USE_I18N = True
# USE_TZ = True

# MEDIA_URL = '/media/'

# CLOUDINARY_STORAGE = {
#     "CLOUD_NAME": "dtua6mfji",
#     "API_KEY": "768934758765893",
#     "API_SECRET": "1j8UbbADhWEC0SdDiNh4X7YA2vY"
# }

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'your_email@gmail.com'
# EMAIL_HOST_PASSWORD = 'your_password'

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # MEDIA settings for local development
# if DEBUG:
#     MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
